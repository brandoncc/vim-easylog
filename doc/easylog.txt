*easylog.txt* <leader>l to wrap log sentence

Author: Joey <https://github.com/joeyZhouYicheng>

====================================================================

\    ███████╗ █████╗ ███████╗██╗   ██╗██╗      ██████╗  ██████╗    \
\    ██╔════╝██╔══██╗██╔════╝╚██╗ ██╔╝██║     ██╔═══██╗██╔════╝    \
\    █████╗  ███████║███████╗ ╚████╔╝ ██║     ██║   ██║██║  ███╗   \
\    ██╔══╝  ██╔══██║╚════██║  ╚██╔╝  ██║     ██║   ██║██║   ██║   \
\    ███████╗██║  ██║███████║   ██║   ███████╗╚██████╔╝╚██████╔╝   \
\    ╚══════╝╚═╝  ╚═╝╚══════╝   ╚═╝   ╚══════╝ ╚═════╝  ╚═════╝    \

====================================================================
1. Quick Start                                             *easylog*

- `<leader>l` to wrap log sentence.
- `<leader>L` to print it at upper line.

- `<leader>tl` to log variable's type
- `<leader>tL` to print variable's type, at upper line.


Supported languages:
(print variable a as an example)
>
  - javascript
  console.log("a", a)
  console.log("a: ", Object.prototype.toString.call(a))

  - golang
  fmt.Println("a", a)
  fmt.Printf("a: %T\n", a)

  - python
  print("a", a)
  print("a: ", type(a))

  - vimscript
  echo "a: "a
  echom "a: ".type(a)
<

====================================================================
2. Customerization                                 *customerization*

To change a map, add a |let| statement in your |vimrc|. Example: >
    let g:easy_log_map_key = "<leader><leader>l"
<

Default set:

  let g:easy_log_map_key = "<leader>l"

  let g:easy_log_upper_configuration_map = "<leader>L"

  let g:easy_log_type_map_key='<leader>tl'

  let g:easy_log_type_upper_map_key='<leader>tL'

You can remap it to your favourite key.

====================================================================
3. Bugs

If you find a bug, please post it on the issue tracker:

https://github.com/joeyZhouYicheng/vim-easylog/issues

