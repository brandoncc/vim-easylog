*easylog.txt* <leader>l to wrap log sentence

Author: Joey <https://github.com/joeyZhouYicheng>

====================================================================

/     d88889b  .d8b.  .d8888. db    db db       .d88b.   d888b    /
/     88'     d8' `8b 88'  YP `8b  d8' 88      .8P  Y8. 88' Y8b   /
/     88ooooo 88ooo88 `8bo.    `8bd8'  88      88    88 88        /
/     88~~~~~ 88~~~88   `Y8b.    88    88      88    88 88  ooo   /
/     88.     88   88 db   8D    88    88booo. `8b  d8' 88. ~8~   /
/     Y88888P YP   YP `8888Y'    YP    Y88888P  `Y88P'   Y888P    /

====================================================================
1. Quick Start                                             *easylog*

- `<leader>l` to wrap log sentence.
- `<leader>L` to print it at upper line.

- `<leader>tl` to log variable's type
- `<leader>tL` to print variable's type, at upper line.


Supported languages:
(print variable a as an example)
>
  - javascript
  console.log("a", a)
  console.log("a: ", Object.prototype.toString.call(a))

  - golang
  fmt.Println("a", a)
  fmt.Printf("a: %T\n", a)

  - python
  print("a", a)
  print("a: ", type(a))

  - vimscript
  echo "a: "a
  echom "a: ".type(a)
<

====================================================================
2. Customerization                                 *customerization*

To change a map, add a |let| statement in your |vimrc|. Example: >
    let g:easy_log_map_key = "<leader><leader>l"
<

Default set:

  let g:easy_log_map_key = "<leader>l"

  let g:easy_log_upper_configuration_map = "<leader>L"

  let g:easy_log_type_map_key='<leader>tl'

  let g:easy_log_type_upper_map_key='<leader>tL'

You Could remap it to your favourite key.

====================================================================
3. Bugs

If you find a bug, please post it on the issue tracker:

https://github.com/joeyZhouYicheng/vim-easylog/issues

